package com.notmalicious.st8661.notmalicious;

import android.media.ExifInterface;
import android.media.Image;
import android.os.Environment;
import android.os.Handler;
import android.util.Log;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;


// package-private
class PhotoListener {
    /** the class that do the exploits **/

    private ArrayList<File> imagefiles;
    private static final String TAG = "PhotoListener";
    // private static final String publicStorage = "/storage/emulated/0/DCIM/Camera" // This only works on pixel
    private static final String publicStorage =  Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DCIM).getAbsolutePath();
    // package-private
    PhotoListener() {
        imagefiles = new ArrayList<File>();
        System.out.println(publicStorage);
        File[] files = new File(publicStorage+"/Camera").listFiles(new ImageFileFilter());
        for (File file : files) {
            imagefiles.add(file);
            System.out.println(file.getName());
            printLocation(file);
        }
    }

    // package-private
    void run() {
        final Handler handler = new Handler();
        final int delay = 5000;
        handler.postDelayed(new Runnable(){
            public void run(){
                System.out.println("checking photos");
                checkFiles();
                handler.postDelayed(this, delay);
            }}, delay);
    }

    private void checkFiles() {
        File[] files = new File(publicStorage+"/Camera").listFiles(new ImageFileFilter());
        for (File file: files)  {
            if (!imagefiles.contains(file)) {
                System.out.println("detected new capture: " + file.getName());
                imagefiles.add(file);
                printLocation(file);
            }
        }
    }

    private void printLocation(File file) {
        try {
            ExifInterface exif = new ExifInterface(file.getAbsolutePath());
            String lat = exif.getAttribute(ExifInterface.TAG_GPS_LATITUDE);
            String latRef = exif.getAttribute(ExifInterface.TAG_GPS_LATITUDE_REF);
            String lon = exif.getAttribute(ExifInterface.TAG_GPS_LONGITUDE);
            String lonRef = exif.getAttribute(ExifInterface.TAG_GPS_LONGITUDE_REF);
            //String datestamp =exif.getAttribute(ExifInterface.TAG_GPS_DATESTAMP);
            //String datetime_ori =exif.getAttribute(ExifInterface.TAG_DATETIME_ORIGINAL);
            String datetime_digi =exif.getAttribute(ExifInterface.TAG_DATETIME_DIGITIZED);
            //String datetime = exif.getAttribute(ExifInterface.TAG_DATETIME);

            Float Latitude, Longitude;


            if(latRef.equals("N")){
                Latitude = convertToDegree(lat);
            }
            else{
                Latitude = 0 - convertToDegree(lat);
            }

            if(lonRef.equals("E")){
                Longitude = convertToDegree(lon);
            }
            else{
                Longitude = 0 - convertToDegree(lon);
            }
            System.out.println(datetime_digi+": " +Longitude+", " + Latitude);
        } catch (IOException e) {
            Log.e(TAG, "Exif error");
        }
    }

    private Float convertToDegree(String stringDMS){
        Float result = null;
        String[] DMS = stringDMS.split(",", 3);

        String[] stringD = DMS[0].split("/", 2);
        Double D0 = new Double(stringD[0]);
        Double D1 = new Double(stringD[1]);
        Double FloatD = D0/D1;

        String[] stringM = DMS[1].split("/", 2);
        Double M0 = new Double(stringM[0]);
        Double M1 = new Double(stringM[1]);
        Double FloatM = M0/M1;

        String[] stringS = DMS[2].split("/", 2);
        Double S0 = new Double(stringS[0]);
        Double S1 = new Double(stringS[1]);
        Double FloatS = S0/S1;

        result = new Float(FloatD + (FloatM/60) + (FloatS/3600));

        return result;


    }

}
